<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd  
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
	
	<!-- 线程执行器配置，用于任务注册 -->
	<bean id="executor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" />
		<property name="maxPoolSize" value="100" />
		<property name="queueCapacity" value="500" />
	</bean>     
	
	<!-- 要调用的工作类 -->
	<bean id="quartzJob" class="com.sva.common.QuartzJob"></bean> 
	<!-- 与SVA对接定时任务 -->
	<bean id="SynchroDataJob" class="com.sva.common.SynchroDataTask"></bean>
	<bean id="SynchroDataTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
		<!-- 调用的类 -->
		<property name="targetObject" ref="SynchroDataJob" />        
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="init" />
		<property name="concurrent" value="false" />
	</bean>       
	<!-- 定义触发时间 -->
	<bean id="SynchroDataTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="SynchroDataTask" />        
		<!-- cron表达式 -->
		<!-- 每隔10秒执行一次 -->
		<property name="cronExpression" value="0/5 * * * * ?" />
	</bean> 
	
	<!-- 与Bluemix对接定时任务 -->
	<bean id="BluemixJob" class="com.sva.common.BluemixClientTask"></bean>
	<bean id="BluemixTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
		<!-- 调用的类 -->
		<property name="targetObject" ref="BluemixJob" />        
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="init" />
		<property name="concurrent" value="false" />
	</bean>       
	<!-- 定义触发时间 -->
	<bean id="BluemixTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="BluemixTask" />        
		<!-- cron表达式 -->
		<!-- 每隔10秒执行一次 -->
		<property name="cronExpression" value="0/5 * * * * ?" />
	</bean>
	
	<!--调度业务 : 定义调用对象和调用对象的方法 -->
	<bean id="jobtask1"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
		<!-- 调用的类 -->
		<property name="targetObject" ref="quartzJob" />        
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="doCreateTable" />
	</bean>
	
	<bean id="jobtask2"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
		<!-- 调用的类 -->
		<property name="targetObject" ref="quartzJob" />        
		<!-- 调用类中的方法 -->
		<property name="targetMethod" value="doStatisticData" />
	</bean>
	
    <bean id="jobtask3"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doDeleteInfo" />
    </bean>

	<bean id="jobtask4"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticOneHour" />
    </bean>	
    
    <bean id="jobtask5"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticDataPerHalfHour" />
    </bean>
    
    <bean id="jobtask6"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticArea" />
    </bean>
    
    <bean id="jobtask7"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="doStatisticAreaByDay" />
    </bean>
	
    <bean id="jobtask8"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="saveVisitiTime" />
    </bean>
     <!--清空表  -->
    <bean id="jobtask9"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
       
       <property name="targetObject" ref="quartzJob" />        
        
       <property name="targetMethod" value="emptyPhoneData" />
    </bean>
   

    <bean id="jobtask10"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
      
        <property name="targetObject" ref="quartzJob" />        
     
        <property name="targetMethod" value="doMinuteAllPeople" />
    </bean>  
<!--每分钟执行一次-->          
    <bean id="jobtask11"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">        
        <!-- 调用的类 -->
        <property name="targetObject" ref="quartzJob" />        
        <!-- 调用类中的方法 -->
        <property name="targetMethod" value="districtDuringStatistic" />
    </bean>  
       
	<!-- 定义触发时间 -->
	<bean id="doTime1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobtask1" />        
		<!-- cron表达式 -->
		<!-- 每隔10秒执行一次 -->
		<property name="cronExpression" value="41 02 00 * * ?" />
	</bean>	
	
	<bean id="taskJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">        
		<property name="jobDetail" ref="jobtask1" />         
		<property name="repeatInterval" value="1000" />       
		<property name="repeatCount" value="0" />    
	</bean>
	
	<bean id="doTime2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobtask2" />
		<property name="cronExpression" value="01 55 00 * * ?" />
	</bean> 
	 
    <bean id="doTime3" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask3" />
        <property name="cronExpression" value="1 45 23 * * ?" />
    </bean>
    
    <bean id="doTime4" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask4" />
        <property name="cronExpression" value="30 * * * * ?" />
    </bean>
    
    <bean id="doTime5" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask5" />
        <property name="cronExpression" value="30 01 * * * ?" />
    </bean>
    
    <bean id="doTime6" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask6" />
        <property name="cronExpression" value="00 00 * * * ?" />
    </bean>
    
    <bean id="doTime7" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask7" />
        <property name="cronExpression" value="30 59 23 * * ?" />
    </bean>
    
    <bean id="doTime8" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask8" />
        <property name="cronExpression" value="30 0/30 * * * ?" />
    </bean>  
    
    <bean id="doTime9" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask9" />
        <property name="cronExpression" value="30 00 00 * * ?" />
    </bean>   
<!--巴展预处理    
    <bean id="doTime9" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask9" />
        <property name="cronExpression" value="00 48 * * * ?" />
    </bean>
 -->
    <bean id="doTime10" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask10" />
        <property name="cronExpression" value="00 * * * * ?" />
    </bean> 
    
    <bean id="doTime11" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="jobtask11" />
        <property name="cronExpression" value="30 * * * * ?" />
    </bean> 
    
	<!--设置调度 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime1" />
				<ref bean="doTime2" />
				<ref bean="doTime3" />
				<ref bean="doTime5" />
				<ref bean="doTime6" />
				<ref bean="doTime7" />
				<ref bean="doTime10" /> 
				<ref bean="doTime11" /> 
			    <ref bean="doTime9" /> 
				<ref bean="doTime8" />
				<ref bean="taskJobTrigger" />
				<ref bean="SynchroDataTime" />
				<ref bean="BluemixTime" />
			</list>
		</property>
		<property name="taskExecutor" ref="executor" />
	</bean>
</beans>